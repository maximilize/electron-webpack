{"version":3,"sources":["../../src/dev/WebpackDevServerManager.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from \"chalk\"\nimport { ChildProcess } from \"child_process\"\nimport * as path from \"path\"\nimport { createConfigurator } from \"../main\"\nimport { statOrNull } from \"../util\"\nimport { ChildProcessManager, PromiseNotifier, run } from \"./ChildProcessManager\"\nimport { LineFilter, logError, logProcess, logProcessErrorOutput } from \"./devUtil\"\n\nconst debug = require(\"debug\")(\"electron-webpack\")\n\nfunction runWds(projectDir: string, env: any) {\n  const isWin = process.platform === \"win32\"\n  const webpackDevServerPath = require.resolve(path.join(\".bin\", \"webpack-dev-server\" + (isWin ? \".cmd\" : \"\")))\n  debug(`Start renderer WDS ${webpackDevServerPath} on ${env.ELECTRON_WEBPACK_WDS_PORT} port`)\n  return run(webpackDevServerPath, [\"--color\", \"--env.autoClean=false\", \"--config\", path.join(__dirname, \"../../webpack.renderer.config.js\")], {\n    env,\n    cwd: projectDir,\n  })\n}\n\n// 1. in another process to speedup compilation\n// 2. some loaders detect webpack-dev-server hot mode only if run as CLI\nexport async function startRenderer(projectDir: string, env: any) {\n  const webpackConfigurator = await createConfigurator(\"renderer\", {production: false, configuration: {projectDir}})\n  const sourceDir = webpackConfigurator.sourceDir\n  // explicitly set to null - do not handle at all and do not show info message\n  if (sourceDir === null) {\n    return\n  }\n\n  const dirStat = await statOrNull(sourceDir)\n  if (dirStat == null || !dirStat.isDirectory()) {\n    logProcess(\"Renderer\", `No renderer source directory (${path.relative(projectDir, sourceDir)})`, chalk.blue)\n    return\n  }\n\n  if (webpackConfigurator.hasDependency(\"electron-next\")) {\n    debug(`Renderer WDS is not started - there is electron-next dependency`)\n    return\n  }\n\n  const lineFilter = new CompoundRendererLineFilter([\n    new OneTimeLineFilter(\"Project is running at \"),\n    new OneTimeLineFilter(\"webpack output is served from \"),\n  ])\n  return await new Promise((resolve: (() => void) | null, reject: ((error: Error) => void) | null) => {\n    let devServerProcess: ChildProcess | null\n    try {\n      devServerProcess = runWds(projectDir, env)\n    }\n    catch (e) {\n      reject!(e)\n      return\n    }\n\n    //tslint:disable-next-line:no-unused-expression\n    new ChildProcessManager(devServerProcess, \"Renderer WDS\", new PromiseNotifier(resolve, reject))\n    devServerProcess.on(\"error\", error => {\n      if (reject == null) {\n        logError(\"Renderer\", error)\n      }\n      else {\n        reject(error)\n        reject = null\n      }\n    })\n\n    devServerProcess.stdout!!.on(\"data\", (data: string) => {\n      logProcess(\"Renderer\", data, chalk.blue, lineFilter)\n\n      const r = resolve\n      // we must resolve only after compilation, otherwise devtools disconnected\n      if (r != null && (data.includes(\": Compiled successfully.\") || data.includes(\": Compiled with warnings.\"))) {\n        resolve = null\n        r()\n      }\n    })\n\n    logProcessErrorOutput(\"Renderer\", devServerProcess)\n  })\n}\n\nclass OneTimeLineFilter implements LineFilter {\n  private filtered = false\n\n  constructor(private readonly prefix: string) {\n  }\n\n  filter(line: string) {\n    if (!this.filtered && line.startsWith(this.prefix)) {\n      this.filtered = true\n      return false\n\n    }\n    return true\n  }\n}\n\nclass CompoundRendererLineFilter implements LineFilter {\n  constructor(private readonly filters: Array<LineFilter>) {\n  }\n\n  filter(line: string) {\n    return !this.filters.some(it => !it.filter(line))\n  }\n}\n"],"sourceRoot":""}
